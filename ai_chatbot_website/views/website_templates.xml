<?xml version="1.0" encoding="UTF-8"?>
<odoo>
  <template id="chatbot_button_and_script" name="Chatbot Button" inherit_id="website.layout">
    <xpath expr="//body" position="inside">
      <button id="chatbot-toggle-button"
              style="position: fixed; bottom: 20px; right: 20px; background-color: #2E4C1E; color: white; border: none; border-radius: 50%; width: 60px; height: 60px; box-shadow: 0 4px 12px rgba(0,0,0,0.4); font-size: 30px; z-index: 10000; cursor: pointer;">
        ğŸ’¬
      </button>

      <script type="module">
        <![CDATA[
        document.addEventListener('DOMContentLoaded', function () {
          const toggleButton = document.getElementById('chatbot-toggle-button');
          let chatbotBox = null;
          let typingIndicator = null;
          let inputField = null;
          let messageContainer = null;
          let maximizeButton = null;
          let resizeHandle = null;
          let isChatboxMaximized = false;

          const defaultChatboxWidth = '350px';
          const defaultChatboxHeight = '450px';
          const minChatboxWidth = 300;
          const minChatboxHeight = 200;

          function renderChatbotBox() {
            if (!chatbotBox) {
              chatbotBox = document.createElement("div");
              chatbotBox.id = "chatbot-box";
              document.body.appendChild(chatbotBox);
            }

            chatbotBox.style.cssText = `
              display: none;
              position: fixed;
              bottom: 90px;
              right: 20px;
              width: ${defaultChatboxWidth};
              height: ${defaultChatboxHeight};
              background-color: white;
              border: 1px solid #e0e0e0;
              border-radius: 10px;
              box-shadow: 0 8px 25px rgba(0,0,0,0.2);
              z-index: 9999;
              flex-direction: column;
              overflow: hidden;
              font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            `;

            chatbotBox.innerHTML = `
              <div id="chatbot-header" style="background-color: #2E4C1E; color: white; padding: 12px 15px; border-top-left-radius: 9px; border-top-right-radius: 9px; display: flex; justify-content: space-between; align-items: center; font-size: 1.2em; font-weight: bold; cursor: grab;">
                <span>Simbi ğŸ§ </span>
                <div>
                  <button id="chatbot-maximize-button" style="background: none; border: none; color: white; font-size: 20px; cursor: pointer;">&#x26F6;</button>
                  <button id="chatbot-inline-close-button" style="background: none; border: none; color: white; font-size: 22px; cursor: pointer;">&times;</button>
                </div>
              </div>
              <div id="chatbot-messages-container" style="flex-grow: 1; padding: 15px; overflow-y: auto; background-color: #fcfcfc;"></div>
              <div id="chatbot-typing" style="padding: 8px 15px; font-style: italic; color: #888; text-align: center; display: none;">digitando...</div>
              <div style="padding: 15px; border-top: 1px solid #f0f0f0; display: flex;">
                <input type="text" id="chatbot-input" placeholder="Digite sua mensagem..." style="flex-grow: 1; padding: 12px; border: 1px solid #ddd; border-radius: 25px; margin-right: 10px; font-size: 1.2em;"/>
                <button id="chatbot-send-button" style="background-color: #4CAF50; color: white; border: none; padding: 12px 20px; border-radius: 25px; cursor: pointer;">Enviar</button>
              </div>
            `;

            typingIndicator = document.getElementById("chatbot-typing");
            inputField = document.getElementById("chatbot-input");
            messageContainer = document.getElementById("chatbot-messages-container");
            maximizeButton = document.getElementById("chatbot-maximize-button");

            document.getElementById("chatbot-send-button").addEventListener("click", handleInput);
            inputField.addEventListener("keypress", (e) => {
              if (e.key === "Enter") handleInput();
            });

            document.getElementById("chatbot-inline-close-button").addEventListener("click", () => {
              chatbotBox.style.display = 'none';
              toggleButton.style.display = 'block';
            });

            maximizeButton.addEventListener("click", () => {
              if (isChatboxMaximized) {
                chatbotBox.style.width = defaultChatboxWidth;
                chatbotBox.style.height = defaultChatboxHeight;
                maximizeButton.innerHTML = '&#x26F6;';
              } else {
                chatbotBox.style.width = 'calc(100% - 40px)';
                chatbotBox.style.height = 'calc(100% - 110px)';
                maximizeButton.innerHTML = '&#x25A1;';
              }
              isChatboxMaximized = !isChatboxMaximized;
            });

            setupDrag(chatbotBox.querySelector("#chatbot-header"));
          }

          function handleInput() {
            const question = inputField.value.trim();
            if (!question) return;

            const userMsg = document.createElement("div");
            userMsg.textContent = question;
            userMsg.style.cssText = `margin-bottom: 10px; text-align: right; background-color: #e3f2fd; padding: 10px 15px; border-radius: 18px; max-width: 85%; margin-left: auto;`;
            messageContainer.appendChild(userMsg);
            inputField.value = "";
            typingIndicator.style.display = "block";
            messageContainer.scrollTop = messageContainer.scrollHeight;

            fetch("/ai_chatbot/ask", {
	  method: "POST",
	  headers: { "Content-Type": "application/json" },
	  body: JSON.stringify({ question: question })
	})
	  .then(response => response.json())
	  .then(raw => {
	    const data = raw.result || raw; // <<â€“ tira o "envelope" jsonrpc do Odoo
	    typingIndicator.style.display = "none";
	    
	    const botMsg = document.createElement("div");
	    botMsg.textContent = data.answer || data.error || "Erro ao obter resposta.";
	    botMsg.style.cssText = `
	      margin-bottom: 10px;
	      text-align: left;
	      background-color: #f1f8e9;
	      padding: 10px 15px;
	      border-radius: 18px;
	      max-width: 85%;
	      margin-right: auto;
	    `;
	    messageContainer.appendChild(botMsg);
	    messageContainer.scrollTop = messageContainer.scrollHeight;
	  })
	  .catch(error => {
	    typingIndicator.style.display = "none";
	    const botMsg = document.createElement("div");
	    botMsg.textContent = "Erro na conexÃ£o com o servidor.";
	    botMsg.style.cssText = `
	      margin-bottom: 10px;
	      text-align: left;
	      background-color: #ffe6e6;
	      padding: 10px 15px;
	      border-radius: 18px;
	      max-width: 85%;
	      margin-right: auto;
	      color: #a00;
	    `;
	    messageContainer.appendChild(botMsg);
	  });
	}

          function openChatbot() {
            renderChatbotBox();
            chatbotBox.style.display = 'flex';
            toggleButton.style.display = 'none';
          }

          function setupDrag(header) {
            let isDragging = false;
            let offsetX = 0;
            let offsetY = 0;

            header.addEventListener('mousedown', (e) => {
              isDragging = true;
              offsetX = e.clientX - chatbotBox.offsetLeft;
              offsetY = e.clientY - chatbotBox.offsetTop;
              chatbotBox.style.right = 'auto';
              chatbotBox.style.bottom = 'auto';
            });

            document.addEventListener('mousemove', (e) => {
              if (!isDragging) return;
              chatbotBox.style.left = `${e.clientX - offsetX}px`;
              chatbotBox.style.top = `${e.clientY - offsetY}px`;
            });

            document.addEventListener('mouseup', () => {
              isDragging = false;
            });
          }

          if (toggleButton) {
            toggleButton.style.display = 'block';
            toggleButton.addEventListener("click", openChatbot);
          }

          // RecuperaÃ§Ã£o automÃ¡tica do botÃ£o se algo esconder o chatbot
          document.addEventListener("click", () => {
            if (chatbotBox && chatbotBox.style.display === 'none') {
              toggleButton.style.display = 'block';
            }
          });
        });
        ]]>
      </script>
    </xpath>
  </template>
</odoo>


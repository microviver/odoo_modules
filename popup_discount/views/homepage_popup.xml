<odoo>
  <template id="homepage_popup_script_injection" name="Popup Email Capture Injection" inherit_id="website.layout">
    <xpath expr="//body" position="inside">
      <script type="module">
        <![CDATA[
          console.log("ðŸš€ Popup module script started loading.");

          document.addEventListener("DOMContentLoaded", function () {
            console.log("âœ… DOMContentLoaded fired. Checking popup_shown status.");

            // Remova ou comente a linha abaixo em produÃ§Ã£o. Ela Ã© Ãºtil apenas para testes.
            // localStorage.removeItem("popup_shown");

            // Verifica se o usuÃ¡rio jÃ¡ viu o popup ou se Ã© um usuÃ¡rio logado com desconto.
            // PoderÃ­amos fazer uma chamada ao backend aqui para verificar se o usuÃ¡rio logado jÃ¡ tem um cÃ³digo.
            if (!localStorage.getItem("popup_shown")) {
              console.log("LocalStorage 'popup_shown' not found. Creating popup.");
              var popup = document.createElement("div");
              popup.id = "main-discount-popup-container";
              popup.innerHTML = `
                <div style="position:fixed;top:20%;left:50%;transform:translateX(-50%);
                             background:#fff;padding:20px;border-radius:8px;box-shadow:0 0 10px rgba(0,0,0,0.5);z-index:9999;">
                  <h3>ðŸŽ‰ Â¡ObtÃ©n un 5% de descuento!</h3>
                  <p>Introduce tu correo electrÃ³nico para recibir tu cÃ³digo exclusivo.</p>
                  <input type="email" id="popup_email" placeholder="Tu correo" style="width: calc(100% - 22px); padding: 8px; margin-bottom: 10px; border: 1px solid #ccc; border-radius: 4px;" />
                  <button id="popup_send_email_button" style="background-color: rgb(46, 76, 30); color: white; padding: 10px 15px; border: none; border-radius: 4px; cursor: pointer;">Enviar</button>
                  <button id="popup_close_button" style="background-color: #dc3545; color: white; padding: 10px 15px; border: none; border-radius: 4px; cursor: pointer; margin-left: 10px;">X</button>
                  <p id="popup_message" style="color: red; margin-top: 10px;"></p>
                </div>
              `;
              document.body.appendChild(popup);
              localStorage.setItem("popup_shown", "true");
              console.log("ðŸŒŸ Popup added to DOM and popup_shown set in localStorage.");

              document.getElementById('popup_send_email_button').addEventListener('click', enviarCorreo);
              document.getElementById('popup_close_button').addEventListener('click', function() {
                  document.getElementById('main-discount-popup-container').remove();
                  console.log("Popup closed by user.");
              });

            } else {
              console.log("ðŸ’¡ Popup not shown. 'popup_shown' already exists in localStorage.");
            }
          });

          window.enviarCorreo = async function() {
            var emailInput = document.getElementById("popup_email");
            var email = emailInput.value;
            var messageElement = document.getElementById("popup_message");
            messageElement.textContent = ""; // Limpa mensagens anteriores

            if (!email) {
                messageElement.textContent = "Por favor, insira o seu e-mail.";
                emailInput.focus();
                return;
            }

            // Simple email validation
            if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)) {
                messageElement.textContent = "Por favor, insira um e-mail vÃ¡lido.";
                emailInput.focus();
                return;
            }

            console.log("Attempting to send email:", email);
            try {
                const response = await fetch("/newsletter/popup", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({
                        jsonrpc: "2.0",
                        method: "call",
                        params: {
                            email: email
                        }
                    }),
                });

                const data = await response.json(); // Sempre tentar ler a resposta JSON

                if (response.ok) {
                    // Resposta bem-sucedida do servidor (HTTP 200 OK)
                    // Mas o Odoo pode retornar um "erro lÃ³gico" dentro do JSON RPC
                    if (data.result && data.result.status === 'ok') {
                        alert("Â¡Correo enviado! Revisa tu bandeja.");
                        document.getElementById('main-discount-popup-container').remove();
                    } else if (data.result && data.result.status === 'exists') {
                        alert("Este e-mail jÃ¡ tem um cÃ³digo de desconto registado. Verifique a sua caixa de entrada.");
                        document.getElementById('main-discount-popup-container').remove();
                    } else if (data.error) { // Odoo JSON-RPC error
                        // Se houver um erro JSON-RPC, exiba a mensagem detalhada do Odoo
                        const errorMessage = data.error.data && data.error.data.message ? data.error.data.message : data.error.message || 'Erro desconhecido do servidor.';
                        alert(`Ocorreu um erro interno: ${errorMessage}`);
                        console.error("Erro do servidor (JSON-RPC):", data.error);
                        messageElement.textContent = `Erro: ${errorMessage}`;
                    } else {
                        // Caso inesperado onde response.ok Ã© true mas o status nÃ£o Ã© 'ok'/'exists' e nÃ£o hÃ¡ 'error'
                        alert(`Ocorreu um erro inesperado: ${data.message || 'Resposta desconhecida'}`);
                        console.error("Unexpected server response:", data);
                        messageElement.textContent = `Erro: ${data.message || 'Resposta inesperada do servidor.'}`;
                    }
                } else {
                    // Resposta de erro do servidor (HTTP 4xx, 5xx)
                    let errorMsg = response.statusText;
                    if (data && data.error && data.error.data && data.error.data.message) {
                        errorMsg = data.error.data.message; // Mensagem de erro detalhada do Odoo
                    } else if (data && data.message) {
                        errorMsg = data.message; // Outras mensagens de erro
                    }
                    alert(`Ocorreu um erro: ${errorMsg}`);
                    console.error("Server error (HTTP):", response.status, data);
                    messageElement.textContent = `Erro: ${errorMsg}`;
                }
            } catch (error) {
                // Erros de rede, JSON parsing, etc.
                alert("Ocorreu um erro de rede ou servidor. Verifique sua conexÃ£o e tente novamente.");
                console.error("Fetch error:", error);
                messageElement.textContent = "Erro de conexÃ£o ou parsing. Tente novamente.";
            }
          };
        ]]>
      </script>
    </xpath>
  </template>
</odoo>
